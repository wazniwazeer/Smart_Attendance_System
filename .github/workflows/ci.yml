name: CI Build & Push (GHCR)

on:
  push:
    branches: [ main ]
    tags: [ "v*" ]
  pull_request:

env:
  DOCKER_BUILDKIT: "1"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # required to push to GHCR

    steps:
      - name: Checkout (with LFS for big model files)
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up QEMU (optional, multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # Compute a normalized image name under GHCR (all lowercase)
      - name: Compute image name
        id: vars
        shell: bash
        run: |
          OWNER_LC="${GITHUB_REPOSITORY_OWNER,,}"
          # You can keep it simple as owner/image, or include repo segment if you like
          echo "image=ghcr.io/${OWNER_LC}/face-attendance" >> $GITHUB_OUTPUT

      # Generate tags/labels safely (no empty tags)
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.vars.outputs.image }}
          flavor: |
            latest=false
          tags: |
            type=sha,format=short
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=ref,event=tag   # adds v* tags when you push a Git tag
          labels: |
            org.opencontainers.image.title=smart-attendance
            org.opencontainers.image.source=${{ github.repositoryUrl }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # PRs: build only (no push)
      - name: Build (PR, no push)
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # main/tags: build & push to GHCR with all computed tags
      - name: Build & Push (main/tags)
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Optional: quick health check if your model file is present
      - name: Smoke test container (if artifacts exist)
        if: github.event_name != 'pull_request' && hashFiles('artifacts/head_best.pth') != ''
        run: |
          docker run -d --rm -p 5000:5000 \
            -v "$PWD/artifacts:/app/artifacts" \
            --name face_test ${{ steps.vars.outputs.image }}:$(echo "${{ steps.meta.outputs.tags }}" | head -n1 | sed 's/.*://')
          for i in {1..30}; do curl -fsS http://localhost:5000/health && break || sleep 2; done
          curl -fsS http://localhost:5000/health
          docker logs face_test --tail=50
          docker stop face_test
